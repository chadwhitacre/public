0.2
=======================


0.4
=======================
should we wrap Binder and Porter into one package, Cambridge?
    Fellow won't be on the same server, so we at least want that in a separate package
ls arg should affect all ls modes
^C should cancel the command if there is one, or exit the program otherwise
porter> named # manually flush current settings to named frags

    flush -- Force a write of our data to disk. This is useful if the named
             files become corrupt and need to be recreated. Note that this
             won't help if the db is corrupt, since that is our primary data
             store. In that case, running this command would actually make
             things worse by propagating the bad data out to the named.conf
             fragments.

    def do_flush(self, inStr=''):
        """ force a write of our data to disk """
        self._write_to_disk()
        print >> self.stdout, "Data has been written to disk."

    I decided not to implement because it makes me think that storage to disk
    should really be transactional with the program. I.e., only write to disk on
    clean exit. also made the help page too long. :^/
deal with orphans -- we have a domain record but there is no server (API may solve this)
only work with lowercase domain names
tab complete available servers (from etc/hosts) and ports (from rpc to servers)
build in fault-tolerance, no more proxy errors! put in a default "parked" page for orphans, from porter's Apache!
figure out how to deal with SSL, since we need it for svn


future
=======================
install properly with distutils
non-interactive mode
log ourselves
write a function to columnize domains ... should be lined up on the first dot from the right
fit codenames back into the mix, somehow?
be sure we work with weird paths, e.g., coming from cron
porter> test (?)


done - 0.2
=======================
ls -l
convert websites to aliases
validate input
capture ^C
also account for www
only store server:port in the actual db
factor out db path to config
get tests working from outside of site-packages
runalltests.py
README
license
use sample db in tests
write a sort function for domains
write dns module
backup data files before writing
ls --info
locate and fix double-up bug
fix paths for testing framework
still getting double-up bug :/
separate svn-managed porter from content (var/, htdocs/, cgi-bin/)
named.conf.frag -> named.porter.conf
inline help
removing a non-existent domain should get a message
reformat do_ls for 80-char width
1 domains
grace -> gremlin
output slave and master named.conf files
named frags go to /home/gremlin
don't keep backups of named.conf files
tease named mgmt out into a separate program called "Binder"
    so that we can have domains in DNS that don't point anywhere w/in zetaserver
    in other words, we negate the benefit of our "parked page" by dictating that all domains be explicitly registered in Porter
    also, separating the two would solve the TESM dilemma
tease named mgmt out into a separate program called "Binder"
    update README
    update tests
    update program itself
