"""This module implements the zetaindex protocol.

We have both server and client implementations in here.

"""

from zetaserver.protocols import Protocol
from zetaserver.protocols.Protocol import EndSession


class Server(Protocol.Server):
    """This is a server implementation of the zetaindex protocol.
    """

    API = ( 'AUTH'
          , 'ECHO'
          , 'FIND'
          , 'INDX'
          , 'NOOP'
          , 'QUIT'
           )

    _authenticated = False

    def check_auth(self):
        if not self._authenticated:
            self.write("500 Not authenticated.")
            raise Protocol.EndRequest

    def AUTH(self, args):
        self.write('200 AUTH!')

    def INDX(self, args):
        self.check_auth()
        self.write('200 INDX!')

    def FIND(self, args):
        self.check_auth()
        self.write('200 FIND!')

    def NOOP(self, args):
        self.check_auth()
        self.write("200 Ok.")



class Client(Protocol.Client):
    """This is a client implementation of the zetaindex protocol.
    """

    def AUTH(self, identifier):
        """AUTHorize
        """
        c, v = self.get_response(u"AUTH %s" % identifier)
        assert c == 200

    def NOOP(self):
        """NOOP
        """
        c, v = self.get_response(u"NOOP")
        assert c == 200
