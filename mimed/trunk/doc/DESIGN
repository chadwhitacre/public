dump a message in the db
    headers are indexed automatically
    message itself is stored
pull a message out of the db
refcount for a particular header drops to zero
    that index is dropped from the db


/var/db/mimedb
mimedb:mimedb

two processes:
    postmaster
    mimed


=====Makefile=====
# install PostgreSQL
pw groupadd mimedb
pw useradd mimedb -g mimedb -s /sbin/nologin
mkdir -p /var/db/mime
chown mimedb:mimedb /var/db/mimedb
initdb /var/db/mime
psql < init.psql
=====Makefile=====
==================
=====init.psql====
START TRANSACTION;

CREATE USER mimedb CREATEDB NOINHERIT;

CREATE DATABASE template_mimedb_0 (
    OWNER       mimedb
  , ENCODING    UTF8;
   );

\c template_mimedb_0

CREATE TABLE message (
    mid         BIGSERIAL PRIMARY KEY
  , headers     TEXT                        # MIME headers
  , body        TEXT                        # MIME body
   );

CREATE TABLE field (
    fid         BIGSERIAL PRIMARY KEY
  , mid         BIGSERIAL
                REFERENCES message
                    MATCH FULL
                    ON DELETE CASCADE
                    ON UPDATE RESTRICT
  , name        TEXT                        # a MIME header field-name
  , body        TEXT                        # a MIME header field-body
   );

COMMIT
=====init.psql====




    the db name is the authentication
    anyone can connect and switch to a database
    restricted operations:
        create a database
        drop a database
        list database names





db = MIMEdb('http://localhost:8080/', '8b0e50efb501438fa42077a360084d6a')
db.store()
db.retrieve()



class txn:
    """under the hood txn gets a txn_id from the server
    the server stores the txn_id in memory, and maps that to a pgsql txn
    either keep the pgsql transaction open
    or run it all at once on commit <- more likely
    """
    def __init__(self):

txn = db.txn()
txn.store()
txn.retrieve()
txn.commit()


