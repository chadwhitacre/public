"""This coupler starts a stand-alone web server.
"""
import logging
import os
import sys

import httpy
from httpy import responders
from httpy.couplers.standalone.config import Config, ConfigError
from httpy.couplers.standalone.server import Server, RestartingServer
from httpy.couplers.utils import add_api


class Coupler:

    def __init__(self, responder):
        """Takes an IResponder instance.
        """

        # Read in configuration.
        # ======================

        try:
            config = Config(sys.argv[1:])
        except ConfigError, err:
            print >> sys.stderr, err.msg
            print >> sys.stderr, "`man 1 httpy' for usage."
            raise SystemExit(2)


        # Add API to the responder.
        # =========================

        root = os.path.realpath(os.getcwd())
        uri = None # We will update this once we have a socket.
        responder = add_api(responder, root, uri)


        # Start a server.
        # ===============

        plain_jane = (  (httpy.mode.IS_DEPLOYMENT)
                     or (httpy.mode.IS_STAGING)
                     or (sys.platform == 'win32')
                     or ('HTTPY_PLAIN_JANE' in os.environ)
                     or (sys.argv == ['']) # called interactively
                       )
        ServerClass = plain_jane and Server or RestartingServer
        self.server = ServerClass(config, responder)


    def go(self):
        """Wheeeeee!
        """
        self.server.start()
