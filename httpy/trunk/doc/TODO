Notes

I don't care what language httpy is written in, or if it is compiled or
interpreted. I am much more concerned about:

    the API it exposes to the site developer
    ease of installation (on Win though?)
    speed/robustness


========================================
    0.2 -- PT & STATIC
========================================

do something smart with DOC_TYPE
    make it a config option
    with smart names -- `xhtml transitional'
solidify and document the API -- this will have to be backwards-compatible!
    error handling -- raise NotFound()?
    config api
    context.py api -- CGI?
    app.py api -- CGI + StringIO?
figure out daemontools
convert doc to man page
test on Windows!!!
=====DONE=====
get frame macro instead of template
configuration
    think through relationship of cli options, config, and env variables
        defaults -- can start httpy with no options, etc. and get something
    check to make sure site root exists on filesystem
    push all config checking up and out of init
write a make file
continue with unit tests
refactor into multiple modules, distutils + make


========================================
    0.4 -- STATE
========================================
factor out medusa goofiness if possible
support something sane like CGI to provide context.py with it's API
support POST
manage sessions, post, querystring, cookies


========================================
    0.6 -- APPS
========================================
supporting on-the-fly reloading of apps in dev mode
add apps to configuration
document apps
tests


========================================
    0.8 -- BELLS & WHISTLES
========================================
sensible error handling
precompile templates (in place)
    httpy -f httpy.conf -c
server string -> httpy

