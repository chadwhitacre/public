import imp
import linecache
import sys

from httpy._zope.interface.verify import verifyClass, verifyObject

from httpy import DefaultApp
from httpy.interfaces import IApp, ITransaction
from httpy.NicolasLehuen import Cache
from httpy.utils import log, Restart


class AppCache(Cache):
    """A cached mapping of magic directory paths to app objects.
    """

    def __init__(self, mode):
        """Takes a mode per httpy.Config.

        The maxsize of 1000 is just a safety belt. If you trip it on purpose,
        you are blowing my mind. Why on earth are you building a website with
        more than a thousand distinct applications?

        """

        Cache.__init__(self, max_size=1000)
        self.dev_mode = mode == 'development'
        if self.dev_mode:
            self._modules = sys.modules.keys()
        self.mtimes = {}


    def check(self, __, entry):
        """Given a magic dir and an entry, return an app or None.

        In development mode, this cache is just a pass-through for get_app.

        """

        if not self.dev_mode:
            if hasattr(entry, 'loaded'):
                return None
            else:
                setattr(entry, 'loaded', True)
                return self.get_app(__)
        else:
            self.check_mod_times()
            return self.get_app(__)


    def build(self, __, app, entry):
        """Given a magic directory, an app, and an entry, return an app.

        This should only ever get called once per app in deployment mode, since
        in that mode we never invalidate cache entries once they are loaded, and
        they therefore never get rebuilt.

        The calls to verify* will raise an error if the objects do not implement
        the names interfaces. However, they can implement them implicitly; they
        don't need to use the httpy._zope machinery to explicitly assert that they
        implement them.

        """

        verifyObject(IApp, app, tentative=True)
        verifyClass(ITransaction, app.Transaction, tentative=True)

        return app



