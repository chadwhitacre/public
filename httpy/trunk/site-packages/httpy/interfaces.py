from httpy._zope.interface import Interface
from httpy._zope.interface import Attribute


class IApp(Interface):
    """A module that defines a Application object.
    """

    Application = Attribute('Application', 'A class that implements ' +
                                           'IApplication')


class IRequest(Interface):
    """An HTTP Request message.

        http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html

    This is a wooden representation of a Request, with only the following API:

        attribute       description or example
        =======================================================================
        raw             the raw Request exactly as it was found on the wire
        raw_line        the Request-Line
        raw_headers     the message headers
        raw_body        the message body

        method          the HTTP method requested
        uri             the full requested URI as a dictionary
        path            the path component of the URI
        message         the HTTP message (i.e., everything but the Request-Line)
                          as an instance of email.Message.Message, or None if
                          there is no message


    The values of raw_line and raw_headers do not include the terminating
    linebreaks of those items. However, raw includes every byte that was
    received over the wire, so it is possible to retrieve those values. raw
    also includes any initial blank lines.

    """

    raw = Attribute( 'raw'
                   , 'the raw Request exactly as it was found on the wire.'
                    )
    raw_line = Attribute('raw_line', 'the Request-Line')
    raw_headers = Attribute('raw_headers', 'the message headers')
    raw_body = Attribute('raw_body', 'the message body')

    method = Attribute('method', 'the HTTP method requested')
    uri = Attribute('uri', 'the full requested URI as a dictionary')
    path = Attribute('path', 'the path component of the URI')
    message = Attribute('message', 'the HTTP message (i.e., everything but ' +
                               'the Request-Line as an instance of ' +
                               'email.Message.Message, or None if there is ' +
                               'no message')


class IApplication(Interface):
    """Represents a single autonomous transaction in a stateless application.
    """

    def __init__(config):
        """Takes a dictionary of configuration information.
        """

    config = Attribute('config', 'A dictionary of configuration information.')

    def respond(request):
        """Given an httpy.Request, should raise an httpy.Response.

        Exceptions other than httpy.Response may also be raised; they will
        generate a '500 Internal Server Error' response.

        """


