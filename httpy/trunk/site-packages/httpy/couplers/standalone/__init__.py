"""Define objects for connecting IResponders to the outside world.
"""
import logging
import os
import sys

import httpy
from httpy import responders
from httpy.couplers.standalone.config import Config
from httpy.couplers.standalone.server import Server, RestartingServer


# main
# ====

def main(responder=None, configurator=None, argv=None):
    """Starts an HTTP server.

    Takes an IResponder instance, an IConfig class, and an argv. This main()
    function is inspired by Guido's:

        http://www.artima.com/weblogs/viewpost.jsp?thread=4829

    """

    # Set up top-level logging.
    # =========================
    # Do something smarter with this.

    format = "%(name)-16s %(levelname)-8s %(message)s"
    logging.basicConfig( level=logging.DEBUG
                       , format=format
                        )


    # Read in configuration.
    # ======================

    configurator = configurator or Config
    argv = argv or sys.argv[1:]
    try:
        config = configurator(argv)
    except ConfigError, err:
        print >> sys.stderr, err.msg
        print >> sys.stderr, "`man 1 httpy' for usage."
        return 2


    # Start a server.
    # ===============

    plain_jane = (  (httpy.mode.IS_DEPLOYMENT)
                 or (sys.platform == 'win32')
                 or ('HTTPY_PLAIN_JANE' in os.environ)
                 or (sys.argv == ['']) # called interactively
                   )
    ServerClass = plain_jane and Server or RestartingServer
    responder = responder or responders.Default()
    server = ServerClass(config, responder)
    server.start() # wheeeeee!
