import os
import sys

from httpy import Request
from httpy._zope.interface import implements
from httpy._zope.server.interfaces import ITask
from httpy.couplers.utils import Deliver


class Task:
    """Represents the task of serving a single HTTP Request.

    The httpy._zope.server machinery instantiates this once for each HTTP
    request, and calls service in its own thread.

    """

    implements(ITask)


    def __init__(self, channel, request):
        """Takes an IServerChannel (httpy._zope) and an IRequest (httpy).
        """

        self.channel    = channel
        self.server     = self.channel.server
        self.responder  = self.channel.server.responder
        self.request    = request
        self.deliver    = Deliver( Request
                                 , self.responder
                                 , self.channel
                                  )


    # ITask contracts
    # ===============
    # service, cancel, defer

    def service(self):
        self.deliver(self.request)
        self.channel.close_when_done()

    def cancel(self):
        self.channel.close_when_done()

    def defer(self):
        pass
