"""This module implements a basic httpy application.
"""
import logging
import mimetypes
import rfc822
import os
import stat
import time

import httpy
from httpy.utils import translate, Path


__all__ = ('Responder',)
__docformat__ = 'rest'

logger = logging.getLogger('httpy.responders.static')


class Responder:

    doc_root = ''
    defaults = ()

    def __init__(self, doc_root=None, defaults=None):
        """Takes a filesystem path and a list of default names.
        """
        self.doc_root = doc_root or self.doc_root or os.getcwd()
        self.defaults = defaults or ('index.html', 'index.htm')

    def respond(self, request):
        self.serve_static(request)

    def serve_static(self, request):
        """Serve a static file off of the filesystem.

        In deployment mode, we honor any 'If-Modified-Since' header, an HTTP
        header used for caching.

        """

        path = translate(request.path, self.doc_root, self.defaults)
        ims = request.headers.get('If-Modified-Since', '')


        # Get basic info from the filesystem and start building a response.
        # =================================================================

        stats = os.stat(path)
        mtime = stats[stat.ST_MTIME]
        size = stats[stat.ST_SIZE]
        content_type = mimetypes.guess_type(path)[0] or 'text/plain'
        response = httpy.Response(200)


        # Support 304s, but only in deployment mode.
        # ==========================================

        if httpy.mode.IS_DEPLOYMENT:
            if ims:
                mod_since = rfc822.parsedate(ims)
                last_modified = time.gmtime(mtime)
                if last_modified[:6] <= mod_since[:6]:
                    response.code = 304


        # Finish building the response and raise it.
        # ========================================

        response.headers['Last-Modified'] = rfc822.formatdate(mtime)
        response.headers['Content-Type'] = content_type
        response.headers['Content-Length'] = size
        if response.code != 304:
            if size < 50*1024: # 50KB cutoff
                response.body = open(path).read()
            else:
                response.body = utils.Path(path)
        raise response
