import traceback
from SocketServer import StreamRequestHandler

from httpy.Endings import Ending
from httpy.Request import Request
from httpy.Response import Response


class Handler(StreamRequestHandler):

    def handle(self):

        try:
            # server and handler can share a config
            # but each app should get their own config

            self.config = self.server.config
            request = Request(self.rfile)
            self.process(request)

        except Ending, ending:
            self.end(ending)

        except:
            self.fail()


    def process(self, request):
        Transaction = self.get_transaction(config, request)


        # Instantiate and invoke the transaction.
        # =======================================
        # The intention is for process() to raise an Ending or other exception.

        transaction = Transaction(request)
        transaction.process()


    def get_transaction(self, config, request):
        """Given a config dict and an httpy.Request, return a Transaction.

         - import based on uri path and app/server root
         - in deployment mode, don't reimport
         - in development mode, reimport on every request
         - app-layer configuration should be optional

        """

        # If we are in development mode, refresh all modules.
        # ===================================================

        pass


        # Determine which application to use for this request.
        # ====================================================

        app_path = '/'
        for app_path in config['apps']:
            if request.path.startswith(app):
                app_path = _app_path
        app_path = os.path.realpath(app_path)

        if not os.path.isdir(app_path):
            raise Endings.NotFound


        # Attempt to import a Transaction from the application.
        # =====================================================

        __ = os.path.join(app_path, '__')
        if os.path.isdir(__):




        from httpy import app
        config = app.configure(config)
        app.Transaction



    def end(self, response):
        print ending


    def fail(self):
        print traceback.format_exc()


